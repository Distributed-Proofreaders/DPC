' {2,}' => ' ' => '1 multiple spaces down to one' => 'gm'
',,' => '"' => '1.5 double comma to double-quote' => 'g'
'\. \. \. \.' => '....' => '2 compress expanded 4-dot ellipse' => 'g'
'(.) *\. \. \. *' => '$1 ... ' => '3 compress expanded 3-dot ellipse' => 'g'
'([^\.])\.\.([^\.]' => '$1.$2' => '4 two-dot ellipse (or something' => 'g'
' +$' => '' => '5 remove EOL spaces' => 'g'
' -|- ' => '-' => '6 remove spaces around dashes (many, visual)' => 'g'
' --|-- ' => '--' => '7 remove spaces around emdashes' => 'g'
'(?<!\.)\.{3}(?!\.)' => ' ...' => '12 ensure space before ellipsis not after period (needs work)' => 'g'
' \.' => '.' => '13 space before period (many, visual, ...)' => 'g'
'\'\'' => '"' => '14 two single quotes sb double' => 'g'
'\b(t)(ii|li|b|n)' => '$1h' => '15 tii or tli or tb or tn at start of word sb th' => 'gi'
'(\d)j(\D)' => '$1½$2' => '17 j might be a fraction' => 'g'
'([^a-zA-Zö)rn(\w*)' => '$1m$2' => '18 rn at start of word sb m' => 'g'
'(\n\n)\n+' => '$1' => '19 Reduce multiple blank lines to one blank line' => 'gm'
'\b(w)(li|b)(\w*)' => '$1h$3' => '20 (+) wli or wb at start of word sb wh' => 'gi'
'([^a-zA-Zäöü])h([lr])(\w*)' => '$1b$2$3' => '21 (-) convert hr or hl at start of word to br or bl' => 'g'
'([^bdfghjklmnrtwz\s])ü' => '$1il' => '22 "ü" preceded by unlikely mate' => 'ig'
'ü(\s)' => 'il$1' => '23 ü at end of word sb il' => 'ig'
' -$| - ' => '--' => '24 unlikely hyphens to em-dashes' => 'g'
'\[\s' => '\[' => '25 remove spaces adjacent inside brackets' => 'g'
'\s\]' => '\]' => '26 remove spaces adjacent inside brackets' => 'g'
'__' => '--' => '27 double underscores to em-dash' => 'g'
'(\w*?)rnp(\w*)' => '$1mp$2' => '28 convert rnp inside a word to mp' => 'g'
'(?<!(\W))\/(?=\W)' => ',' => '29 forward slash sb comma-apostrophe' => 'g'
'(?<![ainu])j(?=\s)' => ';' => '30 solitary j to semicolon' => 'g'
'(\w[cC])b(\w)' => '$1h$2' => '31 cb within word sb ch' => 'g'
'(\Wc|C])b(\w)' => '$1h$2' => '32 cb at start word sb ch' => 'g'
'gbt' => 'ght' => '33 convert gbt to ght' => 'g'
'(\w[ai])hle' => '$1ble' => '34 convert [ai]hle to -ble' => 'g'
'\b(to\s*)he\b' => '$1be' => '35 convert "to he" to "to be"' => 'g'
'\\v|\\{2}|vv' => 'W' => '36 convert \v or \\{2} or vv to W' => 'g'
'(?<!\.)\.{3}(?!\.)' => ' ...' => '12 ensure space before ellipsis not after period (needs work)' => 'g'
'\'\'' => '"' => '14 two single quotes sb double' => 'g'
'\b(t)(ii|li|b|n)' => '$1h' => '15 tii or tli or tb or tn at start of word sb th' => 'gi'
'(\w)cl\b' => '$1d' => '38 cl at end of word sb d' => 'g'
'(\w)pbt' => '$1pht' => '39 pbt to pht' => 'g'
'[^e]rnm|rnm[^e]' => 'mm' => '40 rnm to mm not government' => 'g'
'\b!!(\w)' => 'H$1' => '41 Convert !! at beginning of word to H' => 'g'
'\bX[a-z]' => 'N$1' => '42 X at beginning of word to N' => 'g'
'(\w)\!(\w)' => '$1l$2' => '43 ! in middle of word to l' => 'g'
'\s{3,}[|\.!\s]+$' => '' => '44 Strip garbage punctuation from end of line' => 'g'
'^[\^_](?!\{)' => '' => '45 Strip garbage punctuation from start of line' => 'g'
'^([\^_]\{)' => ' %1' => '46 Strip garbage punctuation from start of line' => 'g'
'^ ([\^_]\{)' => '%1' => '47 Strip garbage punctuation from start of line' => 'g'
'(?<=[\'"])1\b(?!\.,)' => 'I' => '48 (bad) single 1 if preceded by sngl or dbl " - put this after 0-\d to 0.\d ' => 'g'
'([^\w\.\?\!\,:"\-\)\]\};\'&%°=\+\s]$)' => '$1' => '49 abnormal line-ending characters' => 'g'
'([a-z])U' => '$1ll' => '50 generally suspicious characters' => ''
' ?= ?o' => ' = 0' => '51 =o sb = 0' => 'gi'
'(\.[a-z][^\.])' => '$1' => '53 period followed by lowercase not an abbrev.' => 'g'
'\([^\)]*?(\(|\n\n)' => '' => '54 unmatched left paren' => 'gm'
'\[[^\]]*?(\[|\n\n)' => '' => '54 unmatched left bracket' => 'gm'
'{[^\}]*?(\{\n\n)' => '($1)' => '54 unmatched left brace' => 'g'
'([A-Za-zÀ-ÖÙ-öù-ÿ]){30,}' => '$1' => 'all letters' => 'g'
