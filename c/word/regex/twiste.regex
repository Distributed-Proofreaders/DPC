
'{' => '(' => '1) left brace sb left paren' => 'g'
'}' => ')' => '2) right brace sb right paren' => 'g'


'i([4567890])th' => '1$1th' => '3) e.g. i2th sb 12th' => 'ig'
'i ([4567890])th' => '1$1th' => '3) e.g. i 2th sb 12th' => 'ig'


-- frequent number misscans
'([\b\d]\d*)[qg]th' => '$19th' => '4) qth or gth sb 9th' => 'g'
'(\d)[gqç]' => '$19' => '5) cgqç sb 9' => 'g'

-- roman numeral problems
'([lxiv])ü([lxiv\.])' => '$1ii$2' => '6) ü sb ii' => 'g'

-- thick numbers
'iooo' => '1000' => '7) iooo sb 1000' => 'ig'
'ioo' => '100' => '8) ioo sb 100' => 'ig'

-- 4 digit numbers

'\b[jil](\d)(\d)(\d)' => '1$1$2$3' => '9) i before 3 digits' => 'ig'
'(\d)[jil](\d)(\d)' => '$11$2$3' => '10) embedded i in second position' => 'ig'
'(\d)(\d)[jil](\d)' => '$1$21$3' => '11) embedded i in third position' => 'ig'
'(\d)(\d)(\d)[jil]' => '$1$2$31' => '12) embedded i in fourth position' => 'ig'

'(\d)[oc](\d)(\d)' => '$10$2$3' => '13) embedded 0 in second position' => 'ig'
'(\d)(\d)[oc](\d)' => '$1$20$3' => '14) embedded 0 in third position' => 'ig'
'(\d)(\d)(\d)[oc]' => '$1$2$30' => '15) embedded 0 in fourth position' => 'ig'


'\b[ji] ?(\d) ?(\d) ?(\d[\b\d])' => '1$1$2$3' => '16) i before 3 digits' => 'ig'
'(\d) ?[jil] ?(\d) ?(\d[\b\d])' => '$11$2$3' => '17) embedded i in second position' => 'ig'
'(\d) ?(\d) ?[jil] ?(\d[\b\d])' => '$1$21$3' => '18) embedded i in third position' => 'ig'
'(\d) ?(\d) ?(\d) ?[jil](\b\d)' => '$1$2$31$4' => '19) embedded i in fourth position' => 'ig'

'(\d) ?[oc] ?(\d) ?(\d[\b\d])' => '$10$2$3' => '20) embedded i in second position' => 'ig'
'(\d) ?(\d) ?[oc] ?(\d[\b\d])' => '$1$20$3' => '21) embedded i in third position' => 'ig'
'(\d) ?(\d) ?(\d) ?[oc](\b\d)' => '$1$2$30$4' => '22) embedded i in fourth position' => 'ig'

'\b[ji](\d\d)[ij]\b' => '1$11' => '23) digits between two "i"s' -> 'ig'
'\b[ji](\d\d)[oc]\b' => '1$10' => '24) digits between i and o' -> 'ig'


-- nth nst etc.


'\bioth\b' => '10th' => '17) solitary ioth sb 10th' => 'ig'
'\bio\b' => '10' => '16) solitary io sb 10' => 'ig'

'(\d)io' => '$110' => '18) 2io sb 210' => 'ig'
'(\d)oi' => '$101' => '19) 2oi sb 201' => 'ig'

'\b[ji](\d\d\d)' => '1$1' => '21) i before 3 digits' => 'ig'
'\b[ji](\d\d)' => '1$1' => '22) i before 2 digits' => 'ig'
'\b[ji] (\d\d\d)' => '1$1' => '21) i-space before 3 digits' => 'ig'
'\b[ji] (\d\d)' => '1$1' => '22) i-space before 2 digits' => 'ig'

-- numbers
'i(,)o' => '1$10' => '24) i,o sb 1,0 - maybe Lo' => 'ig'
'i([,\.]\d)' => '1$1' => '25) i,0 sb 1,0' => 'ig'

'\b(\d)[ij](\d)\b' => '$11$2' => '26) digit-i-digit sb 1' => 'ig'
'(\d\d\d)[ji]\b' => '$11' => '27) 11) i after 3 digits' => 'ig'
'(\d\d)[ji]\b' => '$11' => '28) i after 2 digits' => 'ig'
'(\d)[ji]\b' => '$11' => '29) i after 1 digit' => 'ig'
'(\d\d\d) [ji]\b' => '$11' => '30) i after 3 digits' => 'ig'
'(\d\d) [ji]\b' => '$11' => '31) i after 2 digits' => 'ig'
'(\d) [ji]\b' => '$11' => '32) i after 1 digit' => 'ig'

'(\d)ooo' => '$1000' => '33) ooo sb 000' => 'ig'
'(\d)oo' '$100' '34) #oo sb #00' 'ig'

'ooo' => '000' => '36) three ohs sb zeroes' => 'ig'

'[ij](\d)o(\d)' => '1$10$2' => '36a i-digit-o-digit' => 'ig'
'(\d)o(\d)' => '$10$2' => '37) o between 2 digits (chemicals)' => 'ig'
'(i\d)i(\d)' => '1$11$2' => '37a) i-digit-i-digit (chemicals)' => 'ig'
'(\d)i(\d)' => '$11$2' => '37) i between 2 digits (chemicals)' => 'ig'
'(\d\d) (\d\d)' => '$1$2' => 'space between 2 pairs of digits' => 'g'
'(\d) (\d)' => '$1$2' => 'space between 2 digits' => 'g'

'(\b)io(\W)' => '$110$2' => '39) io sb 10' => 'ig'
'(\b)oi(\W)' => '$101$2' => '40) oi sb 01' => 'ig'
'[\d|\b]/i *(\d)' => '1$1' => '41) i\d sb 1\d (and spaces)' => 'ig'
'\b\d?i (st)\b' => '1$1' => '42) 'i st sb 1st' => 'ig'
'\si(\d)(st|th)\b' => '1$1$2' => 'i2th => 12th' => 'ig'
'(\b)n(\d)' => '$111$2' => '43) n followed by digit sb 11' => 'g'
'(\d)n(\W)' => '$111$2' => '44) n following digit sb 11' => 'g'
'(\b)nth(\W)' => '$111th$2' => '45) nth sb 11th' => 'g'
'(\d) *ist' => '$11st' => '46) digit ist => digit 1st' => 'ig'
'(\b)ist(\W)' => '$11st$2' => '47) floating ist sb 1st' => 'ig'

'(\d)\s+2nd' => '$12nd' => '48) n 2nd sb n2nd e.g. 3 2nd -> 32nd' => 'gmi'
'(\d) th(\W)' => '$1th$2' => '49) close up n th e.g. 4 th to 4th' => 'g'


'ooi' => '001' => 'ooi sb 001' => 'ig'
'oio' => '010' => 'oio sb 010' => 'ig'
'oii' => '011' => 'oii sb 011' => 'ig'
'ioo' => '100' => 'ioo sb 100' => 'ig'
'ioi' => '101' => 'ioi sb 101' => 'ig'
'iio' => '110' => 'iio sb 110' => 'ig'

'o ?o ?i' => '001' => 'ooi sb 001' => 'ig'
'o ?i ?o' => '010' => 'oio sb 010' => 'ig'
'o ?i ?i' => '011' => 'oii sb 011' => 'ig'
'i ?o ?o' => '100' => 'ioo sb 100' => 'ig'
'i ?o ?i' => '101' => 'ioi sb 101' => 'ig'
'i ?i ?o' => '110' => 'iio sb 110' => 'ig'

'(\d)ii' => '$111' => '50) ii sb 11' => 'ig'
'ii(\d)' => '11$1' => '51) ii sb 11' => 'ig'
'(\d)oo' => '$100' => '52) oo sb 00' => 'ig'
'oo(\d)' => '00$1' => '53) oo sb 00' => 'ig'

'(\d)i' => '$11' => '54) i sb 1' => 'ig'
'i(\d)' => '1$1' => '55) i  sb 1' => 'ig'
'(\d)o\b' => '$10' => '56) o sb 0' => 'ig'
'o(\d)' => '0$1' => '57) o sb 0' => 'ig'

'\d[cgqpuzl]' =>  '' => 'suspicious letters next to digits' => 'ig'
'[cgqpuzlst]\d' => '' => 'suspicious letters next to digits' => 'ig'

-- thinner numeric checks
'(\d|\s)i(\s*?)(\d)' => '$11$3' => '58) Ii in digit-i or space-i before space?-digit' => 'ig'
'i(\d)' => '1$1' => '38) i sb 1' => 'ig'
'o(\.\d)' => '0$1' => '63) oh-decimal sb zero-decimal' => 'g'
'(\d)o' '$10' '35) #o sb #0' 'ig'
'[jil]·' => '1.' => 'mid-dot i sb decimal 1' => 'ig'
'o·' => '0.' => 'mid-dot o sb decimal 0' => 'ig'
'·[jil]' => '.1' => 'i mid-dot sb 1 decimal' => 'ig'
'·o' => '.0' => 'o mid-dot sb 0 decimal' => 'ig'
'o(\d)' => '0$1' => '37) o sb 0 (chemicals)' => 'ig'


'\. \. \. \. ' => ' ... ' => '64) compress expanded ellipse' => 'g'
'\. \. \. ' => ' ... ' => '65) compress expanded ellipse' => 'g'
'([^\.])\.\.([^\.]' => '66) $1.$2' => 'only two dots together' => 'g'

'\b(vols|vol|ver|ser|ed|trans|ft|in|m|t|pt|oz|yd)"' => '$1.¸' => '67) dbl-quote sb period-comma' => 'g'
'(\d) foil\.' => '$1 foll\.' => 'foil. sb foll.' => 'g'
'foil\.' => 'foll\.' => 'foil. sb foll.' => 'g'
'([ixlv]{2})"' => '$1.,' => '68) dbl-quote sb period-comma' => 'g'
'\b([xlvi]"' => '$1.,' => '69) roman num " sb .,' => 'gi'
'(\s?)([XVI]*)L"(\s?)' => '$1$2I.,$3' => '70) "I." misread as "L" (e.g. Henry VIIL)' => 'g'


'(\d)s([^t])' => '$18$2' => 's sb 8 (or 5)' => 'ig'
's(\d)' => '8$1' => 's sb 8 (or 5)' => 'ig'

// '(\d)([^\w\d\s\[])i([^n])' => '$1$21$3' => 'misread i sb 1' => 'gi'
// '(\d)([^\w\d\s\[])o([^n])' => '$1$20$3' => 'misread i sb 0' => 'gi'
// '(\d)[^\w\d\s][io]' => '$1.$2' => 'digit-something-i or o' => 'gi'
'(\d)[-] ?(\d+)%' => '$1.$2%' => 'misread decimal in pct !! Watch for range of values' => 'ig'
'·' => '.' => 'middle-dot sb decimal' => 'g'

# perhaps more oh/zero and eye/one errors?


[io]\.\d and \d\.[io]
// found none

'i\.(\w)' => 'L$1' => 'I-dot misread from L' => 'ig'
1,$s/\(\d\)[ìíil]/\11/g
1,$s/o\(\d\)/0\1/g -- chems
1,$s/i\(\d\)/1\1/g -- chems

'(\d{4})(\d{4})' => '$1-$2' => 'date range missing hyphen' => 'g'
'(\d{4})--(\d{4})' => '$1-$2' => 'date range double hyphen' => 'g'
'(\d{4}),(\d{4})' => '$1, $2' => 'date range comma missing space' => 'g'
'(\d{4}-\d) (\d+)' => '$1$2' => 'date semirange extra space' => 'g'

'(io,(\d)' => '10,$1' => 'another io for 10' => 'g'


'[a-zA-Z]\d' => '#inspect $1#' => 'unlikely letter-digit' 'gi'
'a\.d\.' => 'A.D.' => 'set a.d. uppercase' => 'g'
'b\.c\.' => 'B.C.' => 'set b.c. uppercase' => 'g'
'a\.m\.' => 'A.M.' => 'set a.m. uppercase' => 'g'
'p\.m\.' => 'P.M.' => 'set p.m. uppercase' => 'g'
"([^ld])'([AEIOUaeiou])" => '$1 $2' => 'subst. apostrophe for quote' => 'gi'
'ç\.v\.' => 'q.v.' => 'common OCR error' => 'g'
'([^qs]\.v\.)' => '#inspect $1#' => 'common ocr error' => 'g'
ç.v.yç.v./q.v./g
[^qs]\.v\.
'(fig[^shu\.])' => '$1' => 'common ocr error' => 'gi'
'\&c([^.])' => '&c.$1' => 'period dropped from &c.' => 'gi'
'(\d) %' => '$1%' => 'spurious space before percent sign' => 'g'
'o%' => '0%' => 'oh should be zero' => 'ig'
'\blb\b' => '[lb]' => 'EB representation for pound weight' => 'g'
'(per cent)[^\.]' => 'per cent.' => 'EB has period at end of per cent' => 'g'
'(\b\d+)(m|in|ft)\.' => '$1 $2.' => 'dropped space' => 'g'







-- inspect - merges distinct #s
1,$s/\(\d\d\) \(\d\d\)/\1\2/g -- inspect
1,$s/\(\d\d\d\) \(\d\)/\1\2/g -- inspect
1,$s/1 \(\d\d\d\)/1\1/g
1,$s/o,\(\d\)/0,\1/g

1,$s/i \(\d\)/1\1/g
1,$s/\(\d\) i /\11 /g

/\d[Iiìíl]
/[Iiìíl]\d
/[Iiìíl]\.\d
1,$s/\(\d\)[Iiìíl]/\11/g
--1,$s/[Iiìíl]\(\d\)/1\1/g (catches e.g. Al2
1,$s/[Iiìíl]\.\(\d\)/1.\1/g
1,$s/[Iiìíl],\(\d\)/1,\1/g
1,$s/\(\d\),[Iiìíl]/\1,1/g




-- letters that are really digits

1 i, l
2 z
5 s
6 ö
9 g, q, ç

"[gqç](\d)" => "9$1" => "q or ç sb 9" => "gi"

"(\d)[ö]" => "$16" => "ö sb 6" => "gi"
"[qç](\d)" => "6$1" => "ö sb 6" => "gi"

í - replace all?
is ö really 6?

digit-[óö] => digit-6
1,$s/\(\d\)[óö]/\16
reverse
1,$s/ö\(\d\)/6\1

is ç really 9?
ç => 9
digit-ç => digit-9
'(\d)ç' => '$19',
reverse
ç(\d)  => '9$1',

*** CHECK ic/noic ***

/^-[^-]
-- comma with no space do this after fixing i/1 etc.
/\a,[\a\d]
\a\d


*****
check single-quotes too
*****

-- quotes

-- ' " xxxxxx"' => ' "xxxxxx"'
1,$s/ " \(\a.*\)"/ "\1"/

-- comma-space-quote-space => trim right space
1,$s/, " /, "/g

-- same for a period
1,$s/\. " /\. "/g

-- same for semicolon
1,$s/; " /; "/g

-- same for colon
1,$s/: " /: "/g

-- colon-space-quote-spqce => colon-space-quote
1,$s/: " /: "/g

-- space-quote-semicolon => trim leading space
1,$s/ ";/";/g

-- space-quote-space-right-paren => trim leading space
1,$s/ " (/" (/g

-- space-quote-rightparen => trim leading space
1,$s/ ")/")/g

-- leftparen-quote-space => trim right space
1,$s/(" /("/g

-- space-quote-dash => remove space
1,$s/ "-/"-/g

-- rightparen-space-quote-space => remove trailing space
1,$s/) " /) "/g




'oí ' => 'of ',
' io,' => ' 10,',
'rn([bp])' => 'm$1',
rn[^eoiam ] -- lots of false positives, 
'gbt' => 'ght',
'[àáäéèëìíïòóöùúü]' => '$1*',
'(\b".* ") ' => '$1 "',
'\. " "' => '. "',

"$" + not digit
/\$\D => '$1',
/\£\D => '£1',

to figure out
'(<\w>)\s+' => '$1',
# '(?<=\[)([^FSI])' => '$1',
'([,\.;]) " $1 "' => '([,\.;]) " $1 "',
 [01]­

# ',("?\n\s*"?\p{Upper})' => '.$1',
# ',("?\n{2,}\s*"?\p{Upper})' => '.$1',
# ',(?=\n\n)' => '.',
# ',(?=\s\p{IsUpper}\S)|,(?=\s[A-HJ-Z]\s)' => '.',
'<(\/?)(\p{IsUpper}+)>' => '<$1\L$2\E>',
# '[b-df-hj-np-tv-xz]{5,}' => '',
# '\.("?\n\s*"?\p{Lower})' => ',$1 ',
# '\.(\s\p{IsLower})' => ',$1',
# '\Bii' => 'll',
'\b(\S+)\s\1\b' => '$1',
'\bhl' => 'bl',
'\bhr' => 'br',
'\brn' => 'm',
'\s\'$' => '\'',
'\s+(<\/\w>)' => '$1',
# '^.{75,}' => '',
'cb' => 'ch',
'(\D1\d{3})(1\d{3}\D)' => '$1-$2',
'cl\b' => 'd',
'j(?<![\p{Alpha}\'])' => ';',
'mcnt' => 'ment',
'tii' => 'th',

'v(?<!\p{Alpha})' => 'y',
'«[^»]+»\n?' => '',
'(\d)ft' => '$1 ft',
'(\d)mi' => '$1 mi',
1,$s/\(\A\)m"/\1m.,/g
1,$s/\(\A\)ft"/\1ft.,/g
1,$s/\(\A\)in"/\1in.,/g
'o0' => '00',
'o([\.,])\d' => '0$1',
'([íiIl]j),(\d)' => '1,$2',

'([Oo]),(\d)' => '0,$2' => 'oh sb zero' => 'ig'
'(\d)[iíIj](\d)' => '$11$2' => 'variations of i sb 1' => 'ig' 
'(\d)[oO](\d)' => '$10$2' => 'oh sb zero' => 'ig'
'([ \(-])[iíjIl](\d)' => '$11$2' => 'variations of i sb 1' => 'ig' 
'([ \(-])[Oo](\d)' => '$10$2' => 'oO sb 0' => 'ig'
'i([¼½¾])' => '1$1' => 'i before fraction' => 'ig'

bb sourced checks
improperly delimited paragraph
[^\.\!\?\)"]\n\n

General purpose oddities
' \(;\)' => '$1;' => 'space before punctuation' => 'g'
'([a-z])(,|\.)([\w[^\.]])' => '$1$2$3' => 'embedded period or comma' => 'ig'
'(\w)(\()' => '$1 $2' => 'word adjacent to paren' => 'g'
'(\))(\w)' => '$1 $2' => 'word adjacent to paren' => 'g'

'\s([;:\?\!])' => '$1' => 'space before sentence-terminating punctuation' => 'gms'
'(\w)\r;' => '$1;\n' => 'semicolon dropped to next line' => 'ms'
'(\*)' => '$1' => 'check existing asterisks' => 'g'
'([a-z,;\)]\r)\r([a-z])' => '$1\n$2' => 'dbl-space in possibly inappropriate spots' => 'gms'
'  +' => ' ' => 'multiple spaces down to one' => 'g'
